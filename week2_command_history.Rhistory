} else {
y <- 0
}
print(y)
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
print(y)
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
print(y)
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
print(y)
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
print(y)
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
print(y)
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
print(y)
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
y
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
y
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
y
y <- if(x>0){
10
} else {
0
}
y
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
y
y <- if(x>0){
10
} else {
0
}
y
x <- sample(-100:100,1)
if(x>0){
y<-10
} else {
y <- 0
}
y
y <- if(x>0){
10
} else {
0
}
y
?seq_along
x <- a:c
x <- seq(a,d)
x <- 1:11
seq_along(x)
x <- c("a", "b")
x[letter]
x <- matrix(1:6, 2, 3)
seq_len(nrow(x))
seq_len(ncol(x))
x <- matrix(1:6, 2, 3)
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))){
print(x[i,j])
}
counter <- 0
while(counter < 10){
print(counter)
counter <- counter + 1
}
?rbinom
rbinom(1,1,0.5)
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 & z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 & z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>=3 & z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin ==1){
z <- z+1
} else {
z <- z-1
}
for (i in 1:100){
if(i<=20){
next
}
print(i)
}
for (i in 1:30){
if(i<=20){
next
}
print(i)
}
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
args(lm)
formals(ln)
formals(lm)
args(lm)
lm
args(lm)
f <- function(a,b){
print(a)
print(b)
}
f(44)
f <- function(a,b){
print(b)
print(a)
print(b)
}
f(44)
f <- function(a,b){
print(a)
print(b)
}
f(44)
myplot <- function(x, y, type="l", ...) {
plot(x, y, type=type, ...)
}
myplot(1:10, rnorm(10))
myplot(1:100, rnorm(100))
plot(1:100, rnorm(100))
myplot(1:100, rnorm(100))
plot(1:100, rnorm(100), add=TRUE)
myplot(1:100, rnorm(100))
plot(1:100, rnorm(100))
args(myplot)
args(plot)
args(paste)
args(cat)
ls
above10 <- function(x){
x>10
}
above10(1:22)
above10 <- function(x){
x[x>10]
}
above10 <- function(x){
above10(1:22)
above10 <- function(x){
x[x>10]
}
above10(1:22)
above10(1:2)
above <- function(x, n=2){
x[x>n]
}
above(1:12)
above(1:12,5)
colmeans <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(x[,i])
}
means
}
colmeans(matrix(1:10, 2,5))
colmeans(airmiles)
colmeans(airquality)
colmeans <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(x[,i], na.rm=TRUE)
}
means
}
colmeans(matrix(1:10, 2,5))
colmeans(airquality)
colmeans <- function(x, na.rm=FALSE){
nc <- ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(x[,i], na.rm=na.rm)
}
means
}
colmeans(matrix(1:10, 2,5))
colmeans(airquality)
colmeans(airquality, na.rm=TRUE)
colmeans <- function(x, removeNA=FALSE){
nc <- ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(x[,i], na.rm=removeNA)
}
means
}
colmeans(matrix(1:10, 2,5))
colmeans(airquality)
colmeans(airquality, removeNA=TRUE)
search()
library(ggplot2)
library(ggplot)
install.packages("ggplot2")
library(ggplot)
library(ggplot2)
search()
library(glm)
install.packages("glm")
librar(GML)
library(GML)
library(GLM)
install.packages("GLM")
library(swirl)
install.packages("swirl")
library(swirl)
search()
f <- function(x,y){x^2 +y/z}
f
f(2,2)
f <- function(x,y){x +y/z}
f(2,2)
f(2,10)
z
z <- NULL
f <- function(x,y){x +y/z}
f(2,10)
z <-10
f <- function(x,y){x +y/z}
f(2,10)
ddd
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
make.power(2)
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
make.power(2)
make.power(2)(2)
make.power(2)(22)
make.power(2)(5)
}
square <- make.power(2)
cube <- make.power(3)
square(3)
cube(3)
args(cube)
environment(cube)
ls(environment(cube))
get("n", environment(cube))
get("pw", environment(cube))
get("pow", environment(cube))
get("n", environment(cube))
ls(environment(cube))
get("n", environment(cube))
y <- 10
f<- function(x){
y <- 2
y^2 +g(x)
}
g <- function(x) {
x*y
}
f92
f(2)
f(3)
x <- 1:4
x+2
1:3+2:4
1:3+2:5
x <- matrix(1:4, 2,2)
y <- matrix(rep(10,4), 2, 2)
x*y
x/y
x%*%y
x%/%y
x*y
x%*%y
x/y
x
y
y <- NULL
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
3
class(3)
class(3L)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
savehistory("~/Documents/R/Coursera/R_Programming/week2_command_history.Rhistory")
